{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","id","name","App","useState","selectedGood","setselectedGood","className","onClick","type","map","good","isSelectedGood","cn","handleGoodClick","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,GAAIC,KAAM,WAGLC,EAAM,WACjB,MAAwCC,mBAASJ,EAAM,IAAvD,mBAAOK,EAAP,KAAqBC,EAArB,KAUA,OACE,uBAAMC,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACoB,OAAjBF,EAAwB,oBAAxB,UAAiDA,EAAaH,KAA9D,gBACkB,OAAjBG,EACA,wBACEG,QAAS,WACPF,EAAgB,OAElB,UAAQ,cACRG,KAAK,SACLF,UAAU,gBAEV,QAGN,uBAAOA,UAAU,QAAjB,SACE,gCACGP,EAAMU,KAAI,SAACC,GACV,IAAMC,EAAiBP,IAAiBM,EAExC,OACE,qBACE,UAAQ,OAERJ,UAAWM,IAAG,CACZ,+BAAgCD,IAJpC,UAOE,6BACE,wBACEJ,QAAS,YAvCH,SAACG,GAErBL,EADED,IAAiBM,EACH,KAEAA,GAoCAG,CAAgBH,IAElB,UAASC,EAAiB,eAAiB,YAC3CH,KAAK,SACLF,UAAWM,IAAG,SAAU,CAAE,UAAWD,IANvC,SAQGA,EAAiB,IAAM,QAG5B,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,EAAKT,SAlBHS,EAAKV,eClD1Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c3c30fa.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goods = [\n  { id: 1, name: 'Dumplings' },\n  { id: 2, name: 'Carrot' },\n  { id: 3, name: 'Eggs' },\n  { id: 4, name: 'Ice cream' },\n  { id: 5, name: 'Apple' },\n  { id: 6, name: 'Bread' },\n  { id: 7, name: 'Fish' },\n  { id: 8, name: 'Honey' },\n  { id: 9, name: 'Jam' },\n  { id: 10, name: 'Garlic' },\n];\n\nexport const App = () => {\n  const [selectedGood, setselectedGood] = useState(goods[8]);\n\n  const handleGoodClick = (good) => {\n    if (selectedGood === good) {\n      setselectedGood(null);\n    } else {\n      setselectedGood(good);\n    }\n  };\n\n  return (\n    <main className=\"section container\">\n      <h1 className=\"title is-flex is-align-items-center\">\n        {selectedGood === null ? 'No goods selected' : `${selectedGood.name} is selected`}\n        {(selectedGood !== null) ? (\n          <button\n            onClick={() => {\n              setselectedGood(null);\n            }}\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n          />\n        ) : null}\n      </h1>\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map((good) => {\n            const isSelectedGood = selectedGood === good;\n\n            return (\n              <tr\n                data-cy=\"Good\"\n                key={good.id}\n                className={cn({\n                  'has-background-success-light': isSelectedGood,\n                })}\n              >\n                <td>\n                  <button\n                    onClick={() => {\n                      handleGoodClick(good);\n                    }}\n                    data-cy={isSelectedGood ? 'RemoveButton' : 'AddButton'}\n                    type=\"button\"\n                    className={cn('button', { 'is-info': isSelectedGood })}\n                  >\n                    {isSelectedGood ? '-' : '+'}\n                  </button>\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good.name}\n                </td>\n              </tr>\n            );\n          })\n          }\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}